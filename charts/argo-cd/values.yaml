metricsConfig: &metricsConfig
  enabled: true
  path: /metrics
  serviceMonitor: &serviceMonitorConfig
    enabled: true
    autodetect: false
    interval: 2m
    annotations: {}
    additionalLabels: {}
    namespace: argocd
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    labels:
      release: prometheus
    spec:
      endpoints:
        - port: metrics

applicationSet:
  metrics:
    <<: *metricsConfig
    serviceMonitor:
      <<: *serviceMonitorConfig
      metadata:
        name: applicationSet-metrics
        namespace: argocd
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/part-of: argocd
            app.kubernetes.io/component: applicationSet
        endpoints:
          - path: /metrics

controller:
  metrics:
    <<: *metricsConfig
    serviceMonitor:
      <<: *serviceMonitorConfig
      metadata:
        name: controller-metrics
        namespace: argocd
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/part-of: argocd
            app.kubernetes.io/component: controller
        endpoints:
          - path: /metrics

server:
  service:
    type: NodePort
    port: 443
    targetPort: 443
  metrics:
    <<: *metricsConfig
    serviceMonitor:
      <<: *serviceMonitorConfig
      metadata:
        name: server-metrics
        namespace: argocd
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/part-of: argocd
            app.kubernetes.io/component: server
        endpoints:
          - path: /metrics
  config:
    secretkey: "{{ tpl (lookup \"v1\" \"Secret\" \"argocd\" \"argocd-server-secrets\").data.server.secretkey | b64enc | quote }}"
    address: "{{ tpl (lookup \"v1\" \"Secret\" \"argocd\" \"argocd-server-secrets\").data.server.address | quote }}"
configs:
  rbac:
    - p, role:cached-repos-role, repositories, get
    - p, role:cached-repos-role, clusters, get
    - g, system:authenticated, role:cached-repos-role, repositories, get
    - g, system:authenticated, role:cached-repos-role, clusters, get
    - p, role:read-only-role, applications, get, list, watch
    - p, role:read-only-role, appprojects, get, list, watch
    - g, system:authenticated, role:read-only-role, applications, get, list, watch
    - g, system:authenticated, role:read-only-role, appprojects, get, list, watch
    - p, role:admin-role, *, *
    - g, system:serviceaccounts:argocd, role:admin-role, *, *
    - p, role:argocd-application-controller, applications, create, get, list, watch, update, patch, delete
    - p, role:argocd-application-controller, appprojects, get, list, watch
    - p, role:argocd-application-controller, clusters, get, list, watch
    - p, role:argocd-repo-server, repositories, create, get, list, watch, update, delete, patch
